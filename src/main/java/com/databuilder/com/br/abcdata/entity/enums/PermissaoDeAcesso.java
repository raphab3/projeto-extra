package com.databuilder.com.br.abcdata.entity.enums;

import lombok.AllArgsConstructor;
import lombok.Getter;

@AllArgsConstructor
@Getter
public enum PermissaoDeAcesso {

	ADMIN(1, "ROLE_ADMIN"),
	CADASTRA_ANO_LETIVO(101, "ROLE_CADASTRA_ANO_LETIVO"),
	PESQUISA_ANO_LETIVO(102, "ROLE_PESQUISA_ANO_LETIVO"),
	REMOVE_ANO_LETIVO(103, "ROLE_REMOVE_ANO_LETIVO"),
	EDITA_ANO_LETIVO(104, "ROLE_EDITA_ANO_LETIVO"),
	CADASTRA_NUCLEO(201, "ROLE_CADASTRA_NUCLEO"),
	PESQUISA_NUCLEO(202, "ROLE_PESQUISA_NUCLEO"),
	REMOVE_NUCLEO(203, "ROLE_REMOVE_NUCLEO"),
	EDITA_NUCLEO(204, "ROLE_EDITA_NUCLEO"),
	CADASTRA_SERVIDOR(301, "ROLE_CADASTRA_SERVIDOR"),
	PESQUISA_SERVIDOR(302, "ROLE_PESQUISA_SERVIDOR"),
	REMOVE_SERVIDOR(303, "ROLE_REMOVE_SERVIDOR"),
	EDITA_SERVIDOR(304, "ROLE_EDITA_SERVIDOR"),
	CADASTRA_UNIDADE_EDUCACIONAL(401, "ROLE_CADASTRA_UNIDADE_EDUCACIONAL"),
	PESQUISA_UNIDADES_EDUCACIONAL(402, "ROLE_PESQUISA_UNIDADE_EDUCACIONAL"),
	REMOVE_UNIDADES_EDUCACIONAL(403, "ROLE_REMOVE_UNIDADE_EDUCACIONAL"),
	EDITA_UNIDADES_EDUCACIONAL(404, "ROLE_EDITA_UNIDADE_EDUCACIONAL"),
	CADASTRA_EVENTO(501, "ROLE_CADASTRA_EVENTO"),
	PESQUISA_EVENTO(502, "ROLE_PESQUISA_EVENTO"),
	REMOVE_EVENTO(503, "ROLE_REMOVE_EVENTO"),
	EDITA_EVENTO(504, "ROLE_EDITA_EVENTO"),
	CADASTRA_FORMACAO_EDUCACIONAL(601, "ROLE_CADASTRA_FORMACAO_EDUCACIONAL"),
	PESQUISA_FORMACAO_EDUCACIONAL(602, "ROLE_PESQUISA_FORMACAO_EDUCACIONAL"),
	REMOVE_FORMACAO_EDUCACIONAL(603, "ROLE_REMOVE_FORMACAO_EDUCACIONAL"),
	EDITA_FORMACAO_EDUCACIONAL(604, "ROLE_EDITA_FORMACAO_EDUCACIONAL"),
	CADASTRA_ESTUDANTE(701, "ROLE_CADASTRA_ESTUDANTE"),
	PESQUISA_ESTUDANTE(702, "ROLE_PESQUISA_ESTUDANTE"),
	REMOVE_ESTUDANTE(703, "ROLE_REMOVE_ESTUDANTE"),
	EDITA_ESTUDANTE(704, "ROLE_EDITA_ESTUDANTE"),
	CADASTRA_DISCIPLINA(801, "ROLE_CADASTRA_DISCIPLINA"),
	PESQUISA_DISCIPLINA(802, "ROLE_PESQUISA_DISCIPLINA"),
	REMOVE_DISCIPLINA(803, "ROLE_REMOVE_DISCIPLINA"),
	EDITA_DISCIPLINA(804, "ROLE_EDITA_DISCIPLINA"),
	CADASTRA_AVALIACAO(901, "ROLE_CADASTRA_AVALIACAO"),
	PESQUISA_AVALIACAO(902, "ROLE_PESQUISA_AVALIACAO"),
	REMOVE_AVALIACAO(903, "ROLE_REMOVE_AVALIACAO"),
	EDITA_AVALIACAO(904, "ROLE_EDITA_AVALIACAO"),
	CADASTRA_CONCEITO_NOTA(1001, "ROLE_CADASTRA_CONCEITO_NOTA"),
	PESQUISA_CONCEITO_NOTA(1002, "ROLE_PESQUISA_CONCEITO_NOTA"),
	REMOVE_CONCEITO_NOTA(1003, "ROLE_REMOVE_CONCEITO_NOTA"),
	EDITA_CONCEITO_NOTA(1004, "ROLE_EDITA_CONCEITO_NOTA"),
	CADASTRA_LOGIN(1101, "ROLE_CADASTRA_LOGIN"),
	PESQUISA_LOGIN(1102, "ROLE_PESQUISA_LOGIN"),
	REMOVE_LOGIN(1103, "ROLE_REMOVE_LOGIN"),
	EDITA_LOGIN(1104, "ROLE_EDITA_LOGIN"),
	CADASTRA_SERIE_TURMA(1201, "ROLE_CADASTRA_SERIE_TURMA"),
	PESQUISA_SERIE_TURMA(1202, "ROLE_PESQUISA_SERIE_TURMA"),
	REMOVE_SERIE_TURMA(1203, "ROLE_REMOVE_SERIE_TURMA"),
	EDITA_SERIE_TURMA(1204, "ROLE_EDITA_SERIE_TURMA"),
	CADASTRA_CURSO(1301, "ROLE_CADASTRA_CURSO"),
	PESQUISA_CURSO(1302, "ROLE_PESQUISA_CURSO"),
	REMOVE_CURSO(1303, "ROLE_REMOVE_CURSO"),
	EDITA_CURSO(1304, "ROLE_EDITA_CURSO"),
	CADASTRA_ENDERECO(1401, "ROLE_CADASTRA_ENDERECO"),
	PESQUISA_ENDERECO(1402, "ROLE_PESQUISA_ENDERECO"),
	REMOVE_ENDERECO(1403, "ROLE_REMOVE_ENDERECO"),
	EDITA_ENDERECO(1404, "ROLE_EDITA_ENDERECO"),
	CADASTRA_ESTADO(1501, "ROLE_CADASTRA_ESTADO"),
	PESQUISA_ESTADO(1502, "ROLE_PESQUISA_ESTADO"),
	REMOVE_ESTADO(1503, "ROLE_REMOVE_ESTADO"),
	EDITA_ESTADO(1504, "ROLE_EDITA_ESTADO"),
	CADASTRA_CIDADE(1601, "ROLE_CADASTRA_CIDADE"),
	PESQUISA_CIDADE(1602, "ROLE_PESQUISA_CIDADE"),
	REMOVE_CIDADE(1603, "ROLE_REMOVE_CIDADE"),
	EDITA_CIDADE(1604, "ROLE_EDITA_CIDADE"),
	CADASTRA_INSTITUICAO_DE_ENSINO(1701, "ROLE_CADASTRA_INSTITUICAO_DE_ENSINO"),
	PESQUISA_INSTITUICAO_DE_ENSINO(1702, "ROLE_PESQUISA_INSTITUICAO_DE_ENSINO"),
	REMOVE_INSTITUICAO_DE_ENSINO(1703, "ROLE_REMOVE_INSTITUICAO_DE_ENSINO"),
	EDITA_INSTITUICAO_DE_ENSINO(1704, "ROLE_EDITA_INSTITUICAO_DE_ENSINO"),
	CADASTRA_PAIS(1801, "ROLE_CADASTRA_PAIS"),
	PESQUISA_PAIS(1802, "ROLE_PESQUISA_PAIS"),
	REMOVE_PAIS(1803, "ROLE_REMOVE_PAIS"),
	EDITA_PAIS(1804, "ROLE_EDITA_PAIS");

	
	private int codigo;
	private String descricao;
	
	public static PermissaoDeAcesso toEnum(Integer codigo) {
		
		if (codigo == null) {
			return null;
		}
		for (PermissaoDeAcesso x : PermissaoDeAcesso.values()) {
			if(codigo.equals(x.getCodigo())) {
				return x;
			}
			
		}
		throw new IllegalArgumentException("Id inv√°lido: " + codigo);
	}
	
}
